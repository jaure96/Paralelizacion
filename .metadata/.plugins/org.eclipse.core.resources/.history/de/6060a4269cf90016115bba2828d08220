package p3calculodepiHilosForkJoin;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.RecursiveTask;


public class PiCanculator extends RecursiveTask<Double>{
	
	double anchuraIntervalo;
	long inicio;
	long fin;
	
	public PiCanculator(double anchuraIntervalo, long inicio, long fin){
		this.anchuraIntervalo = anchuraIntervalo;
		this.inicio = inicio;
		this.fin = fin;	
	}
	@Override
	protected Double compute() {
		double valorPi = 0;
		List<RecursiveTask<Double>> tareas = new ArrayList<>();

		while(fin <= Main.NUMINTERVALOS){
			RecursiveTask<Double> nuevaTarea = new PiCanculator(anchuraIntervalo, inicio, fin);
			inicio += Main.TASKAMOUNT;
			fin += Main.TASKAMOUNT;
			tareas.add(nuevaTarea);
			nuevaTarea.fork();
		}
		for (RecursiveTask<Double> tarea: tareas){
			valorPi+= tarea.join();
		}
		return null;		
	}

	
}
